name: cd

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  deploy-package:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Maven Action
        uses: s4u/setup-maven-action@v1.13.0
        with:
          java-version: "21"
          java-distribution: "temurin"
          maven-version: "3.9.6"

      - name: Build with Maven
        run: mvn clean package -Pdeployment --file pom.xml

      - name: Configure AWS credentials
        run: |
          mkdir -p ~/.aws
          echo '[poja]' >> ~/.aws/credentials
          echo "aws_access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
          echo "aws_secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials

      - name: Get CodeArtifact Auth Token
        run: |
          export CODEARTIFACT_AUTH_TOKEN=$(aws codeartifact get-authorization-token --domain harenako-api --domain-owner 779673422809 --region eu-west-3 --query authorizationToken --output text --profile poja)
          echo "CODEARTIFACT_AUTH_TOKEN=${CODEARTIFACT_AUTH_TOKEN}" >> $GITHUB_ENV

      - name: Create Maven settings.xml
        run: |
          mkdir -p ~/.m2
          echo "<settings>
                  <servers>
                    <server>
                      <id>codeartifact</id>
                      <username>aws</username>
                      <password>${{ env.CODEARTIFACT_AUTH_TOKEN }}</password>
                    </server>
                  </servers>
                  <mirrors>
                    <mirror>
                      <id>codeartifact</id>
                      <mirrorOf>*</mirrorOf>
                      <url>https://${{ secrets.DOMAIN }}-${{ secrets.OWNER }}.d.codeartifact.eu-west-3.amazonaws.com/maven/${{ secrets.REPO_NAME }}/</url>
                    </mirror>
                  </mirrors>
                </settings>" > ~/.m2/settings.xml

      - name: Publish package to AWS CodeArtifact
        run: mvn deploy -Pdeployment --settings ~/.m2/settings.xml --file pom.xml